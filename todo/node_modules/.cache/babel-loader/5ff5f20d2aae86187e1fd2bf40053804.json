{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\BACS495-AdvWebBits\\\\todo_list_project\\\\src\\\\Component\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  // form set-up and create id associate to the task created\n  const [input, setInput] = useState('');\n  const focus = useRef(null);\n  useEffect(() => {\n    focus.current.focus();\n  });\n\n  const change = e => {\n    setInput(e.target.value);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: change,\n      type: \"text\",\n      placeholder: \"Add an item here\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      ref: focus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \"Add item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"*Click on task's \\\"text\\\" to strike-out \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 54\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 63\n      }, this), \" \\\"X\\\" to remove task \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"K5Pq2ac6J1iGVFIDk8DHEt8Xdh4=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/jano2187/Documents/GitHub/BACS495-AdvWebBits/todo_list_project/src/Component/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","focus","current","change","e","target","value","submit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,KAAK,GAAGL,MAAM,CAAC,IAAD,CAApB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACC,OAAN,CAAcD,KAAd;AACH,GAFQ,CAAT;;AAIA,QAAME,MAAM,GAAGC,CAAC,IAAI;AAChBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAEH,GAHD;;AAKA,QAAMC,MAAM,GAAGH,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACI,cAAF;AAEAV,IAAAA,KAAK,CAACW,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;AAEXC,MAAAA,IAAI,EAAEf;AAFK,KAAf;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GARD;;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEO,MAAtC;AAAA,4BACI;AAAO,MAAA,QAAQ,EAAEJ,MAAjB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,kBAFhB;AAGI,MAAA,KAAK,EAAGJ,KAHZ;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,SAAS,EAAC,YALd;AAMI,MAAA,GAAG,EAAEE;AANT;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAA,0EAAyC;AAAA;AAAA;AAAA;AAAA,cAAzC,uBAAkD;AAAA;AAAA;AAAA;AAAA,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GArCQJ,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n    // form set-up and create id associate to the task created\r\n    const [input, setInput] = useState('');\r\n\r\n    const focus = useRef(null)\r\n    useEffect(() => { \r\n        focus.current.focus()\r\n    })\r\n\r\n    const change = e => {\r\n        setInput(e.target.value);\r\n\r\n    };\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n        setInput('');\r\n    };\r\n    return (\r\n        <form className='todo-form' onSubmit={submit}>\r\n            <input onChange={change}\r\n                type='text'\r\n                placeholder='Add an item here'\r\n                value={ input }\r\n                name='text'\r\n                className='todo-input'\r\n                ref={focus}\r\n                />\r\n            <button className='todo-button'>Add item</button>\r\n            <p>*Click on task's \"text\" to strike-out <br/> or <br/> \"X\" to remove task </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}