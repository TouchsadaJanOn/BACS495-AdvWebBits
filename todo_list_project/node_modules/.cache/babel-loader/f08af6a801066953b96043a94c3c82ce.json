{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\BACS495-AdvWebBits\\\\todo\\\\src\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body() {\n  _s();\n\n  const [name, setName] = useState();\n  console.log(\"hey!!!!!!\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onInput: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name is set to: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Body, \"rJJt6LMoD8omQ3rgJoOroBgQXzE=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Users/jano2187/Documents/GitHub/BACS495-AdvWebBits/todo/src/Body.js"],"names":["React","useState","Body","name","setName","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,SAASC,IAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,sBAAO;AAAA,4BACH;AAAO,MAAA,KAAK,EAAGH,IAAf;AAAqB,MAAA,OAAO,EAAGI,CAAC,IAAGH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,qCAAoBN,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;GAPQD,I;;KAAAA,I;AAST,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nfunction Body(){\r\n    const [name, setName] = useState();\r\n    console.log(\"hey!!!!!!\")\r\n    return <div>\r\n        <input value ={name} onInput ={e=> setName(e.target.value)}/>\r\n        <p>Name is set to: {name}</p>\r\n        </div>\r\n}\r\n\r\nexport default Body;"]},"metadata":{},"sourceType":"module"}